/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* bst(vector<int>&v,int &idx,int left,int right)
    {
        if(idx==v.size())
        {
            return NULL;
        }
        int val=v[idx];
        if(val<left || val>right)
        {
            return NULL;
        }
        idx++;
        TreeNode* root=new TreeNode(val);
        root-> left=bst(v,idx,left,val);
        root-> right=bst(v,idx,val,right);
        return root;


    }
    TreeNode* bstFromPreorder(vector<int>& preorder) {
        int idx=0;
        return bst(preorder,idx,INT_MIN,INT_MAX);
    }
};
