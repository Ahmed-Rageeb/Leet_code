/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> levelOrder(TreeNode* root) {
        vector<vector<int>>v;
        if (!root)
        {
            return v;
        }       
        queue<pair<TreeNode*, int>> q;
        q.push({root,0});
        while(!q.empty())
        {
            
            auto[node,i]=q.front();
            if (i >= v.size()) 
            {
                v.push_back({});
            }
                
            v[i].push_back(node->val);
            q.pop();
            if(node->left)
            {
                q.push({node->left,i+1});
            }
            if(node->right)
            {
                q.push({node->right,i+1});

            }
                     
        }
        return v;
    }
};
