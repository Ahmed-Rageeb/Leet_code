/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> verticalOrder(TreeNode* root) {
       if(root==NULL)
       {
        return {};
       } 
       queue<pair<TreeNode*,pair<int,int>>>q; 
       map<int,vector<int>>m;
       q.push({root,{0,0}});
       while(!q.empty())
       {
        auto[node,coor]=q.front();
        int col=coor.first;
        int row=coor.second;
        m[col].push_back(node->val);
        q.pop();
        if(node->left)
        {
            q.push({node->left,{col-1,row+1}});
        }

        if(node->right)
        {
            q.push({node->right,{col+1,row+1}});
        }
        
       }
       vector<vector<int>>res;
       for(auto[col,val]:m)
       {
        res.push_back(val);
       }
       return res;

    }
};
