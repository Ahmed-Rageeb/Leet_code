class Solution {
public:
    int minReorder(int n, vector<vector<int>>& connections) {
        vector<vector<pair<int,int>>>v(n);
        int count=0;
        for(auto c: connections)
        {
            int a=c[0];
            int b=c[1];
            v[a].push_back({b,1});
            v[b].push_back({a,0});
        }
        stack<int>st;
        st.push(0);
        vector<bool>visit(n,false);
        visit[0]=true;
        while(!st.empty())
        {
            int a=st.top();
            st.pop();
            for(auto [neighbour,dir]:v[a])
            {
                if(!visit[neighbour])
                {
                    visit[neighbour]=true;
                    count+=dir;
                    st.push(neighbour);
                }
            }
        }
        return count;

    }
};
