class Solution {
public:
    void dfs(int i, int j,vector<vector<char>>& grid)
    {
        stack<pair<int,int>>st;
        st.push({i,j});
        grid[i][j]='0';
        vector<pair<int,int>>dir={{0,1},{0,-1},{1,0},{-1,0}};
        while(!st.empty())
        {
            auto [row,col]=st.top();
            st.pop();
            for(auto i: dir)
            {
                int x=row+i.first;
                int y=col+i.second;
                if(x>=0 && y>=0 && x<grid.size() && y<grid[0].size() && grid[x][y]=='1')
                {
                    st.push({x,y});
                    grid[x][y]='0';
                }
            }
        }
    }
    int numIslands(vector<vector<char>>& grid) {
        int count=0;
        for(int i=0;i<grid.size();i++)
        {
            for(int j=0;j<grid[i].size();j++)
            {
                if(grid[i][j]=='1')
                {
                    dfs(i,j,grid);
                    count++;
                }
            }
        }
        return count;
    }
};
