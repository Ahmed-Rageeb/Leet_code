class Solution {
public:
    int dpvisit(vector<int>& coins,vector<int>&dp,int amount)
    {
        if(amount==0)
        {
            return 0;
        }
        if(amount<0)
        {
            return -1;
        }
        if(dp[amount]!=-1)
        {
            return dp[amount];
        }
        int minc=INT_MAX;
        
        for(int coin:coins)
        {
            int res=dpvisit(coins,dp,amount-coin);
            if(res>=0 && res<minc)
            {
                minc=res+1;
            }
        }
        dp[amount]=(minc==INT_MAX)? -1:minc;
        return dp[amount];
    }
    int coinChange(vector<int>& coins, int amount) {
        vector<int>dp(amount+1,INT_MAX);
        dp[0]=0;
        for(int i=1;i<=amount;i++)
        {
            for(auto coin:coins)
            {
                if(i-coin>=0 && dp[i-coin]!=INT_MAX)
                {
                    dp[i]=min(dp[i],dp[i-coin]+1);
                }
            }
        }
        return dp[amount]==INT_MAX? -1:dp[amount];

    }
};
