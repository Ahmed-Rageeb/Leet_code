/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool test(TreeNode* t, TreeNode* s)
    {
        if(!t && !s)
        {
            return true;
        }
        if(!t || !s)
        {
            return false;
        }
        if(t->val!=s->val)
        {
            return false;
        }
        return test(t->left,s->left) && test(t->right, s->right);
    }
    bool isSubtree(TreeNode* root, TreeNode* subRoot) {
        if(root==NULL)
        {
            return false;
        }
        if(test(root,subRoot))
        {
            return true;
        }
        return isSubtree(root->left,subRoot) ||  isSubtree(root->right,subRoot);
    }
};
