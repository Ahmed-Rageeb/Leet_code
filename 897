/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void visit(TreeNode* root, vector<int>& v) {
        if (!root) return;
        visit(root->left, v);
        v.push_back(root->val);
        visit(root->right, v);
    }

    TreeNode* increasingBST(TreeNode* root) {
        vector<int> v;
        visit(root, v);

        TreeNode* newRoot = nullptr;
        TreeNode* prev = nullptr;

        for (int val : v) {
            TreeNode* node = new TreeNode(val);
            if (!newRoot) {
                newRoot = node; 
            } else {
                prev->right = node; 
            }
            prev = node;
        }

        return newRoot;
    }
};
