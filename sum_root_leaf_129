/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int sum1(TreeNode* root, int totalsum, int sum)
    {
        if(root==NULL)
        {
            return 0;
        }
        if(root->left==NULL && root->right==NULL)
        {
            sum=sum*10+root->val;
            totalsum+=sum;
            cout<<totalsum;
            return totalsum;
        }
        sum=sum*10+root->val;
        int left=sum1(root->left,totalsum,sum);
        int right=sum1(root->right,totalsum,sum);
        return left+right;
    }
    int sumNumbers(TreeNode* root) {
       return sum1(root,0,0);
    }
};
